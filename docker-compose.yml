version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: sdo-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: smart_dating_optimizer
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sdo-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: sdo-api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: smart_dating_optimizer
      DB_SSLMODE: disable
      SERVER_PORT: 8080
      GIN_MODE: release
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - sdo-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sdo-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - sdo-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  sdo-network:
    driver: bridge

